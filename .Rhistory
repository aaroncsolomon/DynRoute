pData(out)
out <- getGEO('GSE115578')
pData(out)
phenoData(out)
out
out <- out$GSE115578_series_matrix.txt.gz
out
exprs(pout)
exprs(out)
experimentData(out)
phenoData(out)
View(phenoData(out))
phenoData(out)
GSE <- 'GSE37124'
out <- getGEO(GSE, destdir = out.dir)
if(length(out) > 1) warning("Length of GEO download > 1, possible missing data") else print("Clean Download")
expressions <- exprs(out[[1]]) #extracts data and metadata
metadata <- pData(phenoData(out[[1]]))
expression()
expressions
View(expressions)
View(metadata)
require(data.table)
wine <- readRDS("~/Documents/Alan Turing/Projects/data/unnormal_train_data/training_data_stem_0_leaf_0_root_0_apex_1_time_0_ratio.RDS")
View(wine)
wine <- readRDS("~/Documents/Alan Turing/Projects/data/unnormal_train_data/training_data_stem_0_leaf_0_root_0.1_apex_0.9_time_10_ratio.RDS")
wine <- readRDS("~/Documents/Alan Turing/Projects/data/unnormal_train_data/training_data_stem_0_leaf_0_root_0.2_apex_0.8_time_10_ratio.RDS")
wine <- readRDS("~/Documents/Alan Turing/Projects/data/unnormal_train_data/training_data_stem_0_leaf_0_root_0.3_apex_0.7_time_10_ratio.RDS")
wine <- readRDS("~/Documents/Alan Turing/Projects/data/unnormal_train_data/training_data_stem_0_leaf_0_root_0.1_apex_0.9_time_10_ratio.RDS")
wine <- readRDS("~/Documents/Alan Turing/Projects/data/unnormal_train_data/training_data_stem_0_leaf_0_root_0.5_apex_0.5_time_10_ratio.RDS")
wine <- readRDS("~/Documents/Alan Turing/Projects/data/unnormal_train_data/training_data_stem_0.1_leaf_0_root_0_apex_0.9_time_10_ratio.RDS")
wine <- readRDS("~/Documents/Alan Turing/Projects/data/unnormal_train_data/training_data_stem_0_leaf_0.1_root_0_apex_0.9_time_10_ratio.RDS")
wine <- readRDS("~/Documents/Alan Turing/Projects/data/unnormal_train_data/training_data_stem_0_leaf_0_root_0.1_apex_0.9_time_10_ratio.RDS")
wine <- readRDS("~/Documents/Alan Turing/Projects/data/unnormal_train_data/training_data_stem_0_leaf_0_root_0.4_apex_0.6_time_10_ratio.RDS")
brks <- seq(0, 1, 0.1)
combos <- unlist(lapply(brks, function(xa){
unlist(lapply(brks, function(xb) {
unlist(lapply(brks, function(xc) {
list(x = xa, y = xb, z = xc)
}), recursive = F)
}), recursive = F)
}), recursive = F)
combos
View(rbindlist(combos))
class(combos)
require(data.table)
brks <- seq(0, 1, 0.1)
combos <- unlist(lapply(brks, function(xa){
unlist(lapply(brks, function(xb) {
unlist(lapply(brks, function(xc) {
list(x = xa, y = xb, z = xc)
}), recursive = F)
}), recursive = F)
}), recursive = F)
combos <- rbindlist(unlist(lapply(brks, function(xa){
unlist(lapply(brks, function(xb) {
unlist(lapply(brks, function(xc) {
list(x = xa, y = xb, z = xc)
}), recursive = F)
}), recursive = F)
}), recursive = F))
combos <- rbindlist(lapply(brks, function(xa){
unlist(lapply(brks, function(xb) {
unlist(lapply(brks, function(xc) {
list(x = xa, y = xb, z = xc)
}), recursive = F)
}), recursive = F)
}), recursive = F)
combos <- rbindlist(lapply(brks, function(xa){
lapply(brks, function(xb) {
lapply(brks, function(xc) {
list(x = xa, y = xb, z = xc)
})
})
}))
View(combos)
combos <- rbindlist(lapply(brks, function(xa){
rbindlist(lapply(brks, function(xb) {
rbindlist(lapply(brks, function(xc) {
list(x = xa, y = xb, z = xc)
}))
}))
}))
combos
funA <- function(x,y,z) {x/z}
funB <- function(x,y,z) {(y^2)*z/x}
funC <- function(x,y,z) {x*y/z}
funD <- function(x,y,z) {x/((y^2)*z)}
funE <- function(x,y,z) {z/x}
funReal <- function(x,y,z) {(x/(y*z)) + y}
combos[, realVal := funReal(x,y,z)]
combos
combos[, A := funA(x,y,z)]
combos[, B := funB(x,y,z)]
combos[, C := funC(x,y,z)]
combos[, D := funD(x,y,z)]
combos[, E := funE(x,y,z)]
View(combos)
require(ggplot2)
require(LaCroixColoR)
require(data.table)
require(lettercase)
boundary.list <- list(apex_inflorescence = c(14, 28), apex_vegetative = c(NA,21), flower_whole = c(14, NA),
hypocotyl_hypocotyl = c(NA, 15), leaf_leaf = c(NA,NA), root_root_whole = c(NA,NA), stem_stem = c(NA, NA))
source('../code/aaron_heatmap.R')
require(gtools)
require(data.table)
require(LaCroixColoR)
require(ggplot2)
diff.exp <- data.table(Band = c(rep("Healthy",4), rep("Diseased",4)),
Gene = rep(c('A','B','C','D'), 2),
Expression =c(2,5,7,10, 2,15, 7, 8))
ggplot(data = diff.exp, aes(x = Gene, y = Expression, fill = factor(Band))) +
geom_bar(stat = "identity", position = 'dodge') + facet_wrap(~Band) +
scale_fill_manual(values = lacroix_palette('PeachPear', 2, 'continuous'), name = "Group") +
theme(text = element_text(size = 25))
multi.tissue <- data.table(Band = c(rep("Alveoli",4), rep("Vascular",4), rep("Lymph",4)),
Gene = rep(c('A','B','C','D'), 3),
Expression =c(3, 3,2,2, 1, 3, 7, 8, 7, 6, 1, 2))
ggplot(data = multi.tissue, aes(x = Gene, y = Expression, fill = factor(Gene))) +
geom_bar(stat = "identity", position = 'dodge') + facet_wrap(~Band) +
scale_fill_manual(values = lacroix_palette('PeachPear', 4, 'continuous'), name = "Gene") +
theme(text = element_text(size = 25))
agg.multi <- multi.tissue[, sum(Expression), by  = .(Gene)]
setnames(agg.multi, "V1", 'Expression')
agg.multi[, Band := "Bulk"]
new.agg <- rbind(multi.tissue, agg.multi)
ggplot(data = new.agg, aes(x = Gene, y = Expression, fill = factor(Gene))) +
geom_bar(stat = "identity", position = 'dodge') + facet_wrap(~Band) +
scale_fill_manual(values = lacroix_palette('PeachPear', 4, 'continuous'), name = "Gene") +
theme(text = element_text(size = 25))
multi.tissue
scaling <- data.table(Band= c('Alveoli', 'Vascular', 'Lymph'), sf = c(.25, .5, .25))
multi.tissue[scaling, on = Band]
multi.tissue[scaling, on = .(Band)]
multi.tissue <-  multi.tissue[scaling, on = .(Band)]
agg.multi <- multi.tissue[, sum(Expression * sf), by  = .(Gene)]
setnames(agg.multi, "V1", 'Expression')
agg.multi[, Band := "Bulk"]
new.agg <- rbind(multi.tissue, agg.multi)
ggplot(data = new.agg, aes(x = Gene, y = Expression, fill = factor(Gene))) +
geom_bar(stat = "identity", position = 'dodge') + facet_wrap(~Band) +
scale_fill_manual(values = lacroix_palette('PeachPear', 4, 'continuous'), name = "Gene") +
theme(text = element_text(size = 25))
agg.multi
multi.tissue
multi.tissue[., sf := NULL]
multi.tissue[, sf := NULL]
new.agg <- rbind(multi.tissue, agg.multi)
ggplot(data = new.agg, aes(x = Gene, y = Expression, fill = factor(Gene))) +
geom_bar(stat = "identity", position = 'dodge') + facet_wrap(~Band) +
scale_fill_manual(values = lacroix_palette('PeachPear', 4, 'continuous'), name = "Gene") +
theme(text = element_text(size = 25))
?ks
??ks
data.table(x = c(1,1,1,2,2,2,3,3,3), y = (1.8, 1.7,2.2, 3.6,3.8,3.9, 4.1,4.7,6))
data.table(x = c(1,1,1,2,2,2,3,3,3), y = (1.8, 1.7,2.2, 3.6,3.8,3.9, 4.1,4.7,6))
data.table(x = c(1,1,1,2,2,2,3,3,3), y = c(1.8, 1.7,2.2, 3.6,3.8,3.9, 4.1,4.7,6))
require(data.table)
data.table(x = c(1,1,1,2,2,2,3,3,3), y = c(1.8, 1.7,2.2, 3.6,3.8,3.9, 4.1,4.7,6))
df <- data.table(x = c(1,1,1,2,2,2,3,3,3), y = c(1.8, 1.7,2.2, 3.6,3.8,3.9, 4.1,4.7,6))
plot(df)
lsfit(df$x, df$y)
?fit
fit <- lsfit(df$x, df$y)
fit$coefficients
plot(fit$coefficients, add = T)
plot(df)
curve(fit$coefficients, add = T)
fit$coefficients
fit$coefficients[1]
fit$coefficients[2]
curve(fit$coefficients[2]*x + fit$coefficients[1], add = T)
df <- data.table(x = c(1,1,1,2,2,2,3,3,3), y = c(1.8, 1.7,2.2, 3.6,3.8,3.9, 2,2.7,1))
fit <- lsfit(df$x, df$y)
plot(df)
curve(fit$coefficients[2]*x + fit$coefficients[1], add = T)
?lsfit
fit <- lsfit(df$x, df$y, wt = c(1, 1, 1, 1, 1, 1, .1, .1, .1))
plot(df)
curve(fit$coefficients[2]*x + fit$coefficients[1], add = T)
df
dt <- data.table(a = c(1, 5, 3), b = c(0, 0,0), c = c(7,3,2))
dt
dx <- data.table(y = c(9, 13, 8))
dt
dx
lsfit(dt,dx)
?lsfit
lsfit(dt,dx, intercept = F)
dt <- data.table(a = c(1, 5, 3), b = c(0, 0,0), c = c(7,3,2))
dx <- data.table(y = c(9, 13, 8.1))
lsfit(dt,dx, intercept = F)
dt <- data.table(a = c(1, 5, 3), b = c(0, 0,0), c = c(7,3,2))
dx <- data.table(y = c(9, 13, 8))
lsfit(dt,dx, intercept = F)
fit <- lsfit(dt,dx, intercept = F)
fit$coefficients
coefficients(fit)
dx <- data.table(y = c(9, 13, 8, 4, 8))
fit <- lsfit(df$x, df$y, wt = c(1, 1, 1, 1, 1, 1, .1, .1, .1))
dt <- data.table(a = c(1, 5, 3, 2, 4), b = c(0, 0,0), c = c(7,3,2,0,0))
dx <- data.table(y = c(9, 13, 8, 4, 8))
fit <- lsfit(dt,dx)
fit
fit <- lsfit(dt,dx, intercept = F)
fit
coefficients(fit)
dt
dt <- data.table(a = c(1, 5, 3, 2, 4), b = c(0, 0,0,0,o), c = c(7,3,2,0,0))
dt <- data.table(a = c(1, 5, 3, 2, 4), b = c(0, 0,0,0,0), c = c(7,3,2,0,0))
dt
dt <- matrix(a = c(1, 5, 3, 2, 4), b = c(0, 0,0,0,0), c = c(7,3,2,0,0))
dx <- matrix(y = c(9, 13, 8, 4, 8))
dt <- matrix(c(c(1, 5, 3, 2, 4), c(0, 0,0,0,0), c(7,3,2,0,0)))
dt
dt <- matrix(c(c(1, 5, 3, 2, 4), c(0, 0,0,0,0), c(7,3,2,0,0)), ncol = 3)
dt
dx <- matrix(c(9, 13, 8, 4, 8))
dx
fit <- lsfit(dt,dx, intercept = F)
fit
dt %*% c(2,1,0)
dt %*% c(2,0,1)
coefficients(fit)
dt <- matrix(c(c(1, 5, 3, 2, 4), c(0, 0,0,0,0), c(7,3,2,0,0)), ncol = 3)
dx <- matrix(c(9, 13, 8, 4, 8))
fit <- lsfit(dt,dx, intercept = F)
coefficients(fit)
dt <- matrix(c(c(1.1, 5, 3, 2, 4), c(0, 0,0,0,0), c(7,2.9,2,0,0)), ncol = 3)
dx <- matrix(c(9, 13, 8, 4, 8))
fit <- lsfit(dt,dx, intercept = F)
coefficients(fit)
dt <- matrix(c(c(1.1, 5, 3, 2, 4), c(0, 0,0,0,0.1), c(7,2.9,2,0,0)), ncol = 3)
dx <- matrix(c(9, 13, 8, 4, 8))
fit <- lsfit(dt,dx, intercept = F)
coefficients(fit)
dt
dt <- matrix(c(c(1.1, 5, 3, 2, 4), c(0, 0,0,0,10), c(7,2.9,2,0,0)), ncol = 3)
dx <- matrix(c(9, 13, 8, 4, 8))
fit <- lsfit(dt,dx, intercept = F)
coefficients(fit)
dt <- matrix(c(c(1.1, 5, 3, 2, 4), c(0, 0,0,0,0), c(7,2.9,2,0,0)), ncol = 3)
dx <- matrix(c(9, 13, 8, 4, 8))
fit <- lsfit(dt,dx, intercept = F)
coefficients(fit)
dt <- matrix(c(c(0, 0,0,0,0), c(1.1, 5, 3, 2, 4), c(0, 0,0,0,0), c(7,2.9,2,0,0), c(0, 0,0,0,0)), ncol = 5)
dx <- matrix(c(9, 13, 8, 4, 8))
fit <- lsfit(dt,dx, intercept = F)
coefficients(fit)
install.packages("e1071")
require(e1071)
?svm
a <- 4
a
exit
exit()
quit()
800 + 500 + 400 + 1000 + 1500
4200 + 750 +200  + 500
setwd("~/Documents/Cambridge/244/DynamicRouting")
l11 <- fread('l11.csv')
require(data.table)
l11 <- fread('l11.csv')
require(ggplot2)
l11
dim(l11)
View(l11)
l11 <- t(fread('l11.csv'))
class(l11)
l11 <- data.table(t(fread('l11.csv')))
View(l11)
setnames(l11, c("Epoch", "Label"))
View(l11)
ggplot(data=11, aes(x=Label, fill=factor(Epoch))) + geom_bar()
ggplot(data=l11, aes(x=Label, fill=factor(Epoch))) + geom_bar()
ggplot(data=l11, aes(x=Label, fill=factor(Label))) + geom_bar() + facet_wrap(~Epoch)
ggplot(data=l11, aes(x=Label, fill=factor(Label))) + geom_bar() +
facet_wrap(~Epoch) + scale_x_discrete()
ggplot(data=l11, aes(x=Label, fill=factor(Label))) + geom_bar() +
facet_wrap(~Epoch) + scale_x_discrete(breaks=seq(0,10,1))
ggplot(data=l11, aes(x=Label, fill=factor(Label))) + geom_bar() +
facet_wrap(~Epoch) + scale_x_discrete(limits=seq(0,10,1))
ggplot(data=l11, aes(x=Label, fill=factor(Label))) + geom_bar() +
facet_wrap(~Epoch) + scale_x_discrete(limits=seq(0,9,1))
ggplot(data=e1, aes(x=Label, fill=factor(Label))) + geom_bar() +
facet_wrap(~Epoch) + scale_x_discrete(limits=seq(0,9,1))
e1 <- data.table(t(frea('received_data/early_c1.csv')))
e2 <- data.table(t(frea('received_data/early_c2.csv')))
e1 <- data.table(t(fread('received_data/early_c1.csv')))
e2 <- data.table(t(fread('received_data/early_c2.csv')))
e3 <- data.table(t(fread('received_data/early_c3.csv')))
setnames(e1, c("Epoch", "Label"))
setnames(e2, c("Epoch", "Label"))
setnames(e3, c("Epoch", "Label"))
ggplot(data=e1, aes(x=Label, fill=factor(Label))) + geom_bar() +
facet_wrap(~Epoch) + scale_x_discrete(limits=seq(0,9,1))
ggplot(data=e2, aes(x=Label, fill=factor(Label))) + geom_bar() +
facet_wrap(~Epoch) + scale_x_discrete(limits=seq(0,9,1))
ggplot(data=e3, aes(x=Label, fill=factor(Label))) + geom_bar() +
facet_wrap(~Epoch) + scale_x_discrete(limits=seq(0,9,1))
ggplot(data=e1, aes(x=Label, fill=factor(Label))) + geom_bar() +
facet_wrap(~Epoch) + scale_x_discrete(limits=seq(0,9,1)) + ggtitle("Early Output 1")
ggplot(data=e2, aes(x=Label, fill=factor(Label))) + geom_bar() +
facet_wrap(~Epoch) + scale_x_discrete(limits=seq(0,9,1)) + ggtitle("Early Output 2")
ggplot(data=e3, aes(x=Label, fill=factor(Label))) + geom_bar() +
facet_wrap(~Epoch) + scale_x_discrete(limits=seq(0,9,1)) + ggtitle("Main Output")
i1 <- data.table(t(fread('received_data/interlayer_l11.csv')))
i2 <- data.table(t(fread('received_data/interlayer_l12.csv')))
i3 <- data.table(t(fread('received_data/interlayer_c3.csv')))
setnames(i1, c("Epoch", "Label"))
setnames(i2, c("Epoch", "Label"))
setnames(i3, c("Epoch", "Label"))
ggplot(data=i1, aes(x=Label, fill=factor(Label))) + geom_bar() +
facet_wrap(~Epoch) + scale_x_discrete(limits=seq(0,9,1)) + ggtitle("Interlayer Conv1 -> Linear")
ggplot(data=i2, aes(x=Label, fill=factor(Label))) + geom_bar() +
facet_wrap(~Epoch) + scale_x_discrete(limits=seq(0,9,1)) + ggtitle("Interlayer Conv2 -> Linear")
ggplot(data=i3, aes(x=Label, fill=factor(Label))) + geom_bar() +
facet_wrap(~Epoch) + scale_x_discrete(limits=seq(0,9,1)) + ggtitle("Interlayer Conv1 -> Conv3")
bas_time  <- fread('basic_times.csv')
bas_time
View(bas_time)
dim(bas_time)
bas_time[2,]
hist(bas_time[2,])
hist(as.numeric(bas_time[2,]))
lt1 <- fread('time_interlayer_l1.csv')
lt2 <- fread('time_interlayer_l2.csv')
dt1 <- fread('time_interlayer_d1.csv')
dt2 <- fread('time_interlayer_d2.csv')
outt <- fread('time_interlayer_ot.csv')
lt1
View(lt1)
lt1 <- data.table(t(fread('time_interlayer_l1.csv')))
lt2 <- data.table(t(fread('time_interlayer_l2.csv')))
dt1 <- data.table(t(fread('time_interlayer_d1.csv')))
dt2 <- data.table(t(fread('time_interlayer_d2.csv')))
outt <- data.table(t(fread('time_interlayer_ot.csv')))
l1
lt1
lt2
setnames(i1, c("Epoch", "Time"))
setnames(i1, c("Epoch", "Time"))## early output times
setnames(i1, c("Epoch", "Time"))
setnames(lt1, c("Epoch", "Time"))
setnames(lt2, c("Epoch", "Time"))
setnames(dt1, c("Epoch", "Time"))
setnames(dt2, c("Epoch", "Time"))
setnames(outt, c("Epoch", "Time"))
lt1[, Partition := 'Conv Layer 1']
lt2[, Partition := 'Conv Layer 2']
dt1[, Partition := 'Decision Layer 1']
dt2[, Partition := 'Decision Layer 1']
outt[, Partition := 'Conv 3 and Output']
?rbind
rbind(lt1, lt2, dt1, dt2, outt)
interlayer_timings <- rbind(lt1, lt2, dt1, dt2, outt)
View(interlayer_timings)
lt1 <- data.table(t(fread('time_early_l1.csv')))
lt2 <- data.table(t(fread('time_early_l2.csv')))
dt1 <- data.table(t(fread('time_early_d1.csv')))
dt2 <- data.table(t(fread('time_early_d2.csv')))
outt <- data.table(t(fread('time_early_ot.csv')))
setnames(lt1, c("Epoch", "Time"))
setnames(lt2, c("Epoch", "Time"))
setnames(dt1, c("Epoch", "Time"))
setnames(dt2, c("Epoch", "Time"))
setnames(outt, c("Epoch", "Time"))
lt1[, Partition := 'Conv Layer 1']
lt2[, Partition := 'Conv Layer 2']
dt1[, Partition := 'Decision Layer 1 and Output']
dt2[, Partition := 'Decision Layer 1 and Output']
outt[, Partition := 'Conv 3 and Output']
early_timings <- rbind(lt1, lt2, dt1, dt2, outt)
View(interlayer_timings)
View(early_timings)
head(interlayer_timings)
bas_time  <- fread('basic_times.csv')
bas_time
View(t(bas_time))
bas_time  <- data.table(t(fread('basic_times.csv')))
bas_time  <- data.table(t(fread('basic_times.csv')))
setnames(bas_time, c("Epoch", "Time"))
bas_time[, Partition:="All Layers"]
bas_time[, Network:="Simple 3 Layer"]
dataa <- rbind(bas_time, interlayer_timings, early_timings)
head(interlayer_timings)
interlayer_timings[, Network :=  "Interlayer"]
dataa <- rbind(bas_time, interlayer_timings, early_timings)
early_timings[, Network :=  "Early Output"]
dataa <- rbind(bas_time, interlayer_timings, early_timings)
View(dataa)
head(dataa)
ggplot(data= dataa, aes(x=Partition, color=factor(Epoch), y = Time)) + geom_point() + facet_wrap(~Network)
ggplot(data= dataa, aes(x=Partition, color=factor(Epoch), y = Time)) +
geom_point() + facet_wrap(~Network, scales = 'free_x')
dataa, aes(x=Partition, color=factor(Epoch), y = Time)) +
geom_jitter
ggplot(data= dataa, aes(x=Partition, color=factor(Epoch), y = Time)) +
geom_jitter() + facet_wrap(~Network, scales = 'free_x')
ggplot(data= dataa, aes(x=Partition, color=factor(Epoch), y = Time)) +
geom_jitter() + facet_wrap(~Network, scales = 'free_x') + theme(axis.text.x = element_text(angle = 90))
bas_time  <- data.table(t(fread('basic_times.csv')))
setnames(bas_time, c("Epoch", "Time"))
bas_time[, Partition:="All Layers"]
bas_time[, Network:="Simple 3 Layer"]
## interlayer times
lt1 <- data.table(t(fread('time_interlayer_l1.csv')))
lt2 <- data.table(t(fread('time_interlayer_l2.csv')))
dt1 <- data.table(t(fread('time_interlayer_d1.csv')))
dt2 <- data.table(t(fread('time_interlayer_d2.csv')))
outt <- data.table(t(fread('time_interlayer_ot.csv')))
setnames(lt1, c("Epoch", "Time"))
setnames(lt2, c("Epoch", "Time"))
setnames(dt1, c("Epoch", "Time"))
setnames(dt2, c("Epoch", "Time"))
setnames(outt, c("Epoch", "Time"))
lt1[, Partition := 'Conv Layer 1']
lt2[, Partition := 'Conv Layer 2']
dt1[, Partition := 'Decision Layer 1']
dt2[, Partition := 'Decision Layer 1']
outt[, Partition := 'Conv 3 and Output']
interlayer_timings <- rbind(lt1, lt2, dt1, dt2, outt)
interlayer_timings[, Network :=  "Interlayer"]
## early output times
lt1 <- data.table(t(fread('time_early_l1.csv')))
lt2 <- data.table(t(fread('time_early_l2.csv')))
dt1 <- data.table(t(fread('time_early_d1.csv')))
dt2 <- data.table(t(fread('time_early_d2.csv')))
outt <- data.table(t(fread('time_early_ot.csv')))
setnames(lt1, c("Epoch", "Time"))
setnames(lt2, c("Epoch", "Time"))
setnames(dt1, c("Epoch", "Time"))
setnames(dt2, c("Epoch", "Time"))
setnames(outt, c("Epoch", "Time"))
lt1[, Partition := 'Conv Layer 1']
lt2[, Partition := 'Conv Layer 2']
dt1[, Partition := 'Decision Layer 1 and Output']
dt2[, Partition := 'Decision Layer 2 and Output']
outt[, Partition := 'Conv 3 and Output']
early_timings <- rbind(lt1, lt2, dt1, dt2, outt)
early_timings[, Network :=  "Early Output"]
dataa <- rbind(bas_time, interlayer_timings, early_timings)
ggplot(data= dataa, aes(x=Partition, color=factor(Epoch), y = Time)) +
geom_jitter() + facet_wrap(~Network, scales = 'free_x') + theme(axis.text.x = element_text(angle = 90))
ggplot(data= dataa, aes(x=Partition, color=factor(Network), y = Time)) +
geom_jitter() + facet_wrap(~Network, scales = 'free_x') + theme(axis.text.x = element_text(angle = 90))
dataa[, Partition := factor(Partition, levels = c('Conv Layer 1', 'Decision Layer 1 and Output', 'Decision Layer 1', 'Conv Layer 2', 'Decision Layer 2 and Output', 'Decision Layer 2', 'Conv 3 and Output'))]
ggplot(data= dataa, aes(x=Partition, color=factor(Network), y = Time)) +
geom_jitter() + facet_wrap(~Network, scales = 'free_x') + theme(axis.text.x = element_text(angle = 90))
bas_time  <- data.table(t(fread('basic_times.csv')))
setnames(bas_time, c("Epoch", "Time"))
bas_time[, Partition:="All Layers"]
bas_time[, Network:="Simple 3 Layer"]
## interlayer times
lt1 <- data.table(t(fread('time_interlayer_l1.csv')))
lt2 <- data.table(t(fread('time_interlayer_l2.csv')))
dt1 <- data.table(t(fread('time_interlayer_d1.csv')))
dt2 <- data.table(t(fread('time_interlayer_d2.csv')))
outt <- data.table(t(fread('time_interlayer_ot.csv')))
setnames(lt1, c("Epoch", "Time"))
setnames(lt2, c("Epoch", "Time"))
setnames(dt1, c("Epoch", "Time"))
setnames(dt2, c("Epoch", "Time"))
setnames(outt, c("Epoch", "Time"))
lt1[, Partition := 'Conv Layer 1']
lt2[, Partition := 'Conv Layer 2']
dt1[, Partition := 'Decision Layer 1']
dt2[, Partition := 'Decision Layer 2']
outt[, Partition := 'Conv 3 and Output']
interlayer_timings <- rbind(lt1, lt2, dt1, dt2, outt)
interlayer_timings[, Network :=  "Interlayer"]
## early output times
lt1 <- data.table(t(fread('time_early_l1.csv')))
lt2 <- data.table(t(fread('time_early_l2.csv')))
dt1 <- data.table(t(fread('time_early_d1.csv')))
dt2 <- data.table(t(fread('time_early_d2.csv')))
outt <- data.table(t(fread('time_early_ot.csv')))
setnames(lt1, c("Epoch", "Time"))
setnames(lt2, c("Epoch", "Time"))
setnames(dt1, c("Epoch", "Time"))
setnames(dt2, c("Epoch", "Time"))
setnames(outt, c("Epoch", "Time"))
lt1[, Partition := 'Conv Layer 1']
lt2[, Partition := 'Conv Layer 2']
dt1[, Partition := 'Decision Layer 1 and Output']
dt2[, Partition := 'Decision Layer 2 and Output']
outt[, Partition := 'Conv 3 and Output']
early_timings <- rbind(lt1, lt2, dt1, dt2, outt)
early_timings[, Network :=  "Early Output"]
dataa <- rbind(bas_time, interlayer_timings, early_timings)
dataa[, Partition := factor(Partition, levels = c('Conv Layer 1', 'Decision Layer 1 and Output', 'Decision Layer 1', 'Conv Layer 2', 'Decision Layer 2 and Output', 'Decision Layer 2', 'Conv 3 and Output', 'All Layers'))]
ggplot(data= dataa, aes(x=Partition, color=factor(Network), y = Time)) +
geom_jitter() + facet_wrap(~Network, scales = 'free_x') + theme(axis.text.x = element_text(angle = 90))
mem <- fread('~/Desktop/memory.csv')
mem
ggplot(data =mem, aes(x=Network, y=Memory)) + geom_point()
ggplot(data =mem, aes(x=Network, y=Memory)) + geom_jittter()
ggplot(data =mem, aes(x=Network, y=Memory)) + geom_jitter()
ggplot(data =mem, aes(x=Network, y=Memory, color = factor(Network))) + geom_jitter()
ggplot(data =mem, aes(x=Network, y=Memory, color = factor(Network))) +
geom_boxplot()
mem[, Network := factor(Network, levels = c('Interlayer', 'Early Output', 'Simple'))]
ggplot(data =mem, aes(x=Network, y=Memory, color = factor(Network))) +
geom_boxplot()
mem[, Network := factor(Network, levels = c('Interlayer', 'Early Output ', Output', 'Simple'))]
ggplot(data =mem, aes(x=Network, y=Memory, color = factor(Network))) +
geom_boxplot()
mem <- fread('~/Desktop/memory.csv')
mem[, Network := factor(Network, levels = c('Interlayer', 'Early Output', 'Simple'))]
ggplot(data =mem, aes(x=Network, y=Memory, color = factor(Network))) +
geom_boxplot()
